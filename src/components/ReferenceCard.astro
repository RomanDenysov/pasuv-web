---

interface ReferenceCardProps {
    title: string;
    category: string;
    city: string;
    year: string;
    img: string;
    images: string[],
}

const { title, category, city, year,    img, images } = Astro.props as ReferenceCardProps;
---

<div class="card">

    <div class="top">
        <svg width="51" height="51" viewBox="0 0 51 51" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M50 1L1 50" stroke="black" stroke-width="2"/>
            <path d="M10 1H50V41" stroke="black" stroke-width="2"/>
        </svg>
        <img src={img} alt="" class="img">
    </div>

    <h1>{title}</h1>

    <span class="line"/>

    <div class="bottom">
        <span>{city}</span>
        <span>{year}</span>
        <span>{category}</span>
    </div>

    <section class="modal">
        <button class="closebtn"><svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1 1L21 21" stroke="black" stroke-width="2"/>
            <path d="M21 1L1 21" stroke="black" stroke-width="2"/>
            </svg>
        </button>
        {images.map((images) => (
            <img src={images} alt="" class="modal-img"/>
        ))}
    </section>

</div>
<style>
    .card{
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        justify-content: space-between;
        max-width: 590px;
        width: 100%;
        height: 100%;
        transition: all 0.3s;
        gap: 1rem;
    }
    .top{
        position: relative;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        cursor: pointer;
    }
    .top svg{
        position: absolute;
        top: 1rem;
        right: 1rem;
        width: 50px;
        height: 50px;
        z-index: 1;
    }
    .img{
        aspect-ratio: 1/1;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    h1 {
        margin-top: 1rem;
    }
    .line{
        width: 100%;
        height: 1px;
        background-color: var(--gray-neutral);
    }
    .bottom{
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        gap: 1rem;
        font-size: 16px;
        color: var(--gray-neutral);
        font-weight: 400;
        line-height: 24px;
    }
    .modal {
        opacity: 0;
        visibility: hidden;
        display: flex;
        position: fixed;
        top: 0%;
        left: 0;
        width: 100vw;
        max-height: 100vh;
        height: auto;
        background-color: white;
        z-index: 1010;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 2rem;
        overflow-y: scroll;
        padding: 2rem 1rem;
        transform: scale(0);
    }
    .modal-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    .closebtn {
        position: absolute;
        top: 1rem;
        right: 2rem;
        z-index: 1;
        background-color: white;
        padding: 5px;
    }
    .closebtn svg {
        width: 20px;
        height: 20px;
    }
    .active {
        opacity: 1;
        visibility: visible;
        transform: scale(1);
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const card = document.querySelector('.card');
        const modal = document.querySelector('.modal');
        const top = document.querySelector('.top');
        const closebtn = document.querySelector('.closebtn');

    top?.addEventListener('click', () => {
        modal?.classList.add('active');
        document.body.style.overflow = 'hidden';
    });

    closebtn?.addEventListener('click', () => {
        modal?.classList.remove('active');
        document.body.style.overflow = 'auto';
        
    });
    });
</script>